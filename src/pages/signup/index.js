import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import {Button, Stack} from "@mui/material";
import {useState} from "react";
import LoginComponent from "@/pages/common/login/LoginComponent";
import {useSelector} from "react-redux";
import {useRouter} from 'next/router'
import axios from "axios";
import process from "next/dist/build/webpack/loaders/resolve-url-loader/lib/postcss";

export default function Home() {
    const [alertMessageOpen, setAlertMessageOpen] = useState(false);
    const [alertMessage, setAlertMessage] = useState('')

    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');

    const isEmailAddress = (str) => {
        let pattern = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
        return pattern.test(str);  // returns a boolean
    }


    const handleLogin = () => {
        if (email === '') {
            setAlertMessage("Email can not be empty!!")
            setAlertMessageOpen(() => true)
            return
        }

        if (!isEmailAddress(email)) {
            setAlertMessage("Please provide valid email")
            setAlertMessageOpen(() => true)
            return
        }

        if (password === '') {
            setAlertMessageOpen(() => true)
            setAlertMessage("Password can not be empty!!")
            return
        }

        let payload = {
            email: email,
            password: password
        }

        axios.post(process.env.NEXT_PUBLIC_APP_API_BASE_URL + 'user/signup', payload)
            .then((response) => {
                if (response.data.status == 201) {
                    setAlertMessageOpen(true)
                    setAlertMessage(response.data.message)
                    setTimeout(() => {
                        window.location.href = "/user/login";
                    }, 3000)

                    return
                }
            }).catch((er) => {
                if (er.code == 'ERR_NETWORK') {
                    setAlertMessageOpen(() => true)
                    setAlertMessage(() => "Please check your network")
                    return
                }

                if (er.response.data.status == 422) {
                    setAlertMessageOpen(true)
                    setAlertMessage(er.response.data.message)
                    return
                }
            });
    }

    const handleEmail = (value) => {
        setEmail(() => value)
    }
    const handlePassword = (value) => {
        setPassword(() => value)
    }

    const handleClose = (event, reason) => {
        if (reason === 'clickaway') {
            return;
        }
        setAlertMessageOpen(false)
    };


    return (
        <>
            <Head>
                <title>Perfect Time</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className={styles.main}>
                <Stack direction="column"
                       spacing={2}
                       width={"100%"}
                       height={"100vh"}
                       justifyContent={"center"}
                       alignItems={"center"}>

                    <LoginComponent title={"Sign up"}
                                    handleEmail={handleEmail}
                                    alertMessageOpen={alertMessageOpen}
                                    handleClose={handleClose}
                                    alertMessage={alertMessage}
                                    handlePassword={handlePassword}/>

                    <Button
                        onClick={handleLogin}
                        variant="outlined">Sign up</Button>

                </Stack>


            </main>
        </>
    )
}
